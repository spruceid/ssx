import { ConnectButton } from '@rainbow-me/rainbowkit';
import { useState } from 'react';
import Head from 'next/head';
import type { NextPage } from 'next';
import { useRouter } from 'next/router';
import { useSSX } from "@spruceid/ssx-react";
import styles from '../styles/Home.module.css';
import { signIn } from 'next-auth/react';
import SignInWithEmailModal from '../components/SignInWithEmailModal';


const Home: NextPage = () => {
  const { ssx, ssxLoaded } = useSSX();
  const router = useRouter();
  const [showModal, setShowModal] = useState<boolean>(false);

  const handleCloseModal = () => {
    setShowModal(false);
  }

  const handleOpenModal = () => {
    setShowModal(true);
  }

  const handleSignIn = async () => {
    const response: any = await ssx?.signIn();
    if (response?.status === 200) {
      router.push('/protected');
    } else if (response?.status === 401) {
      // link not found -> open email modal
      handleOpenModal();
    } else if (response?.status === 403) {
      // sign in error 
    }
  };

  const handleEmailSignIn = async (email: string) => {
    try {
      const callbackUrl = "/protected";
      signIn("email", { email, redirect: false, callbackUrl });
      handleCloseModal()
    } catch (error) {
      console.error(error)
      window.alert(error);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          name="description"
          content="Generated by @rainbow-me/create-rainbowkit"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div style={{ display: "flex", justifyContent: "end" }}>
        <ConnectButton />
      </div>
      <main className={styles.main}>

        <h1 className={styles.title}>
          Welcome to <a href="">RainbowKit</a> + <a href="">wagmi</a> +{' '}
          <a href="https://docs.ssx.id/">SSX</a> + <a href="https://nextjs.org">Next.js</a> + <a href="https://next-auth.js.org/">NextAuth.js!</a>
        </h1>

        <p className={styles.description}>
          Sign-in with Ethereum powered by SSX
          <br />
          <button onClick={handleSignIn} disabled={!ssxLoaded}>Sign Message</button>
          <button onClick={handleOpenModal}>Email</button>
          <SignInWithEmailModal
            showModal={showModal}
            handleClose={handleCloseModal}
            handleEmailSignIn={handleEmailSignIn}
          />
        </p>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" target="_blank" rel="noopener noreferrer">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export default Home;
